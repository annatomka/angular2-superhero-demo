// Generated by CoffeeScript 1.6.2
var ambi, typeChecker,
  __slice = [].slice;

typeChecker = require('typechecker');

ambi = function() {
  var args, callback, caughtError, err, fireMethod, introspectMethod, method, result;

  method = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
  callback = args[args.length - 1];
  result = null;
  err = null;
  if (typeChecker.isArray(method)) {
    fireMethod = method[0], introspectMethod = method[1];
  } else {
    fireMethod = introspectMethod = method;
  }
  if (introspectMethod.length === args.length) {
    try {
      result = fireMethod.apply(null, args);
      if (typeChecker.isError(result)) {
        err = result;
      }
    } catch (_error) {
      caughtError = _error;
      err = caughtError;
    }
    if (err) {
      if (typeof callback === "function") {
        callback(err);
      }
    }
  } else {
    try {
      result = fireMethod.apply(null, args);
      if (typeChecker.isError(result)) {
        err = result;
      }
    } catch (_error) {
      caughtError = _error;
      err = caughtError;
    }
    if (err) {
      if (typeof callback === "function") {
        callback(err);
      }
    } else {
      if (typeof callback === "function") {
        callback(null, result);
      }
    }
  }
  return err || result;
};

module.exports = ambi;
